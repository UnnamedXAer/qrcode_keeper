name: "Reusable workflow: Build & Release"
run-name: "Reusable workflow: Build & Release for: ${{ inputs.flavor }}"

# https://github.com/daniil-shumko/flutter_github_actions_basics/blob/main/.github/workflows/flutter-ci-cd.yaml

on:
  workflow_call:
    inputs:
      flavor:
        required: true
        type: string
        description: "One of: 'production' / 'staging' / 'development'"

      tag_name:
        required: false
        type: string
        description: "the tag"

    secrets:
      TOKEN:
        required: true
      FS_KEYSTORE_FILE:
        required: true
      FS_KEY_PROPERTIES_FILE:
        required: true

jobs:
  build:
    if: inputs.flavor == 'production' || inputs.flavor == 'staging' || inputs.flavor == 'development'
    name: "Build & Release: ${{ inputs.flavor }}"
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Flavor ${{ inputs.flavor }}
        run: echo "Flavor is ${{ inputs.flavor }}."

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "17.x"

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.3.3"

      - name: Extract secrets into required files
        shell: bash
        env:
          FS_KEYSTORE_FILE: ${{ secrets.FS_KEYSTORE_FILE }}
          FS_KEY_PROPERTIES_FILE: ${{ secrets.FS_KEY_PROPERTIES_FILE }}
        run: |
          echo "Convert base64 strings to files"
          mkdir secrets-base64
          echo "$FS_KEY_PROPERTIES_FILE" >> secrets-base64/key.properties.base64
          echo "$FS_KEYSTORE_FILE" >> secrets-base64/qrkeeper-keystore.jks.base64
          echo "done with base64 files creation"
          echo "decoding..."
          base64 --decode secrets-base64/qrkeeper-keystore.jks.base64 > android/app/qrkeeper-keystore.jks
          base64 --decode secrets-base64/key.properties.base64 > android/key.properties
          echo "decoding done"

      - name: Verify existence of "secrets" files
        shell: bash
        run: |
          echo "ls -l ./android"
          ls -l ./android
          echo "ls -l ./android/app"
          ls -l ./android/app

      - name: Updating version in  ./pubspec.yaml
        id: update_app_version
        run: node .github/node_scripts/prepare_version.js "${{ inputs.tag_name }}"

      - name: Build assets & apk
        shell: pwsh
        run: ./build.ps1 -flavor ${{ inputs.flavor }} -install=false -buildAssets -buildType release

      - name: Rename apks
        run: ./.github/scripts/rename_apks.sh ${{ github.run_number }}

      - name: Generate checksums
        id: generate_checksums
        run: |
          echo "GENERATE CHECKSUMS INTO checksum.txt:"
          echo $(./.github/scripts/generate_checksums.sh) >> checksum.txt
          
          echo "VERIFY CHECKSUM FILE:"
          ls -l che*

          echo "SET CHECKSUMS INTO checksum FROM GENERATED FILE:"
          echo "checksum=\"$(<./checksum.txt)\"" >> $GITHUB_OUTPUT

      - name: See checksum
        run: |
          echo "checksum from output:"
          echo "${{ steps.generate_checksums.outputs.checksum }}"

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/qrkeeper-*.apk,./checksum.txt"
          name: ${{ inputs.tag_name }}
          token: ${{ secrets.TOKEN }}
          body: "ðŸ˜€"
          prerelease: ${{ inputs.flavor != 'production' }}

      - name: Committing ./pubspec.yaml
        if: steps.update_app_version.outcome == 'success' && inputs.flavor == 'production'
        run: |
          git config --global user.name 'UnnamedXAer'
          git config --global user.email 'unnamedxaer@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY

          git add ./pubspec.yaml
          git status
          git commit -m "workflow: bump app version name & version code"
          git push origin  HEAD:master
          echo "auto committed version bump done"
