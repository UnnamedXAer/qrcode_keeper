name: "Reusable workflow: Build & Release"
run-name: "Reusable workflow: Build & Release for: ${{ inputs.flavor }}"

# https://github.com/daniil-shumko/flutter_github_actions_basics/blob/main/.github/workflows/flutter-ci-cd.yaml

on:
  workflow_call:
    inputs:
      flavor:
        required: true
        type: string
        description: "One of: 'production' or 'staging'"

      tag-suffix:
        required: false
        type: string
        default: ""
        description: "string appended to the tag. Empty for production otherwise starts with dash, eg. -stag"


    secrets:
      TOKEN:
        required: true
      FS_KEYSTORE_FILE:
        required: true
      FS_KEY_PROPERTIES_FILE:
        required: true

jobs:
  build:
    if: inputs.flavor == 'production' || inputs.flavor == 'staging'
    name: "Build & Release: ${{ inputs.flavor }}"
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Branch name
        run: echo "running on branch ${{ inputs.flavor }}"

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '17.x'

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.3.3'

      - name: Extract secrets into required files
        shell: bash
        env:
          FS_KEYSTORE_FILE: ${{ secrets.FS_KEYSTORE_FILE }}
          FS_KEY_PROPERTIES_FILE: ${{ secrets.FS_KEY_PROPERTIES_FILE }} 
        run: |
          echo "Convert base64 strings to files"
          mkdir secrets-base64
          echo "$FS_KEY_PROPERTIES_FILE" >> secrets-base64/key.properties.base64
          echo "$FS_KEYSTORE_FILE" >> secrets-base64/qrkeeper-keystore.jks.base64
          echo "done with base64 files creation"
          echo "decoding..."
          base64 --decode secrets-base64/qrkeeper-keystore.jks.base64 > android/app/qrkeeper-keystore.jks
          base64 --decode secrets-base64/key.properties.base64 > android/key.properties
          echo "decoding done"

      - name: verify existence of "secret" files
        shell: bash
        run: |
          pwd
          ls -l
          echo "ls -l ./android"
          ls -l ./android
          echo "ls -l ./android/app"
          ls -l ./android/app

      - name: Build assets & apk
        shell: pwsh
        run: ./build.ps1 -flavor ${{ inputs.flavor }} -install=false -buildAssets -buildType release

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/${{ inputs.flavor }}/release/*"
          tag: v1.0.${{ github.run_number }}${{ inputs.tag-suffix }}
          token: ${{ secrets.TOKEN }}